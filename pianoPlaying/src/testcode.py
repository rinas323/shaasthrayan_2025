import pygame
import time
import cv2
import mediapipe as mp

# Initialize pygame mixer
pygame.mixer.init()

# Define a function to play sound
def play_sound(sound_file):
    # Load a sound (make sure to provide a valid path to a sound file on your system)
    sound = pygame.mixer.Sound(sound_file)  # Use the corresponding sound file
    sound.play()

# Define the area to check (example values)
y_min = 200  # Minimum y value of the ankle area
y_max = 300  # Maximum y value of the ankle area

# Group 1: Coordinates for Staircase 1
ankle_data_staircase1 = [
    (305, 306), (303, 306), (302, 304), (302, 304), (300, 304), 
(299, 304), (299, 304), (299, 303), (299, 303), (299, 303), (299, 303), (298, 303), 
(298, 303), (298, 303), (299, 303), (299, 302), (299, 302), (299, 302), (299, 302), 
(299, 302), (299, 302), (299, 303), (299, 303), (298, 303), (298, 302), (298, 302), 
(298, 302), (298, 302), (299, 302), (299, 302), (299, 302), (299, 302), (299, 302), 
(299, 302), (299, 302), (299, 302), (299, 302), (299, 302), (299, 302), (299, 302), 
(299, 302), (299, 302), (299, 302), (299, 302), (299, 302), (299, 302), (299, 302), 
(299, 302), (299, 302), (299, 302), (299, 302), (299, 302), (299, 302), (298, 302), 
(299, 302), (299, 302), (299, 302), (299, 303), (299, 303), (299, 303), (300, 303), 
(300, 303), (299, 302), (299, 302), (299, 302), (299, 302), (299, 302), (300, 302), 
(300, 302), (300, 302), (300, 302), (300, 302), (300, 303), (300, 303), (300, 303), 
(301, 303), (301, 303), (301, 304), (301, 304), (300, 304), (301, 304), (301, 304), 
(301, 304), (301, 304), (302, 304), (302, 304), (302, 304), (302, 304), (302, 304), 
(302, 304), (301, 304), (301, 304), (301, 304), (301, 303), (301, 303), (301, 303), 
(301, 303), (301, 303), (301, 303), (300, 303), (300, 303), (300, 303), (300, 303), 
(300, 303), (300, 303), (300, 303), (300, 303), (299, 303), (300, 303), (300, 303), 
(300, 303), (299, 303), (300, 303), (300, 303), (300, 303), (300, 303), (300, 303), 
(300, 303), (300, 303), (300, 303), (300, 303), (300, 303), (300, 303), (300, 303), 
(300, 303), (300, 303), (300, 303), (300, 303), (301, 303), (302, 303), (302, 303), 
(302, 303), (302, 304), (302, 304), (302, 304), (302, 304), (302, 304), (302, 304), 
(302, 304), (302, 304), (302, 304), (302, 304), (302, 304), (302, 304), (302, 303), 
(302, 303), (302, 303), (302, 303), (302, 303), (302, 303), (302, 303), (302, 303), 
(302, 303), (303, 303), (302, 303), (302, 303), (302, 303), (302, 303), (302, 303), 
(303, 303), (303, 303), (303, 303), (303, 303), (303, 303), (303, 303), (303, 303), 
(303, 303), (304, 304), (304, 305), (305, 305), (305, 304), (305, 304), (306, 304), 
(305, 304), (305, 304), (305, 304), (305, 304), (305, 304), (305, 304), (305, 305), 
(306, 305), (306, 303), (306, 303), (306, 303), (306, 303), (306, 303), (306, 304), 
(307, 304), (307, 304), (307, 304), (307, 304), (307, 304), (306, 304), (306, 305), 
(306, 306), (305, 306), (305, 307), (305, 307), (303, 307), (302, 308), (302, 309), 
(302, 309), (302, 308), (302, 308), (301, 308), (299, 308), (297, 308), (297, 308), 
(297, 307), (297, 306), (297, 306), (298, 306), (303, 306), (304, 306), (304, 306), 
(303, 306), (303, 306), (303, 306), (303, 306), (305, 307), (305, 307), (305, 306), 
(305, 306), (305, 306), (304, 305), (304, 305), (304, 306), (304, 306), (304, 306), 
(304, 306), (303, 305), (302, 304), (301, 304), (301, 302), (301, 301), (302, 301), 
(302, 302), (302, 302), (303, 302), (303, 302), (303, 302), (303, 304), (303, 304), 
(304, 304), (304, 304), (303, 304), (306, 304), (306, 304), (309, 305), (309, 305), 
(311, 306), (311, 306), (311, 306), (312, 306), (311, 307), (311, 309), (311, 309), 
(311, 310), (311, 310), (311, 311), (311, 311), (311, 311), (309, 311), (307, 311), 
(306, 310), (305, 309), (305, 308), (305, 307), (305, 307), (305, 307), (304, 307), 
(300, 308), (298, 308), (305, 309), (308, 309), (309, 309), (311, 310), (311, 310), 
(313, 311), (314, 311), (313, 311), (313, 311), (313, 311), (313, 311), (313, 311), 
(314, 311), (314, 311), (313, 310), (313, 309), (313, 308), (313, 308), (313, 308), 
(313, 308), (313, 308), (313, 308), (313, 308), (313, 308), (313, 307), (313, 307), 
(313, 308), (314, 308), (315, 308), (315, 308), (315, 308), (314, 309), (314, 310), 
(314, 310), (314, 310), (311, 309), (310, 308), (309, 309), (308, 309), (305, 308), 
(305, 310), (306, 310), (307, 306), (308, 307), (306, 308), (305, 309), (305, 309), 
(305, 310), (305, 310), (305, 310), (305, 309), (305, 309), (306, 309), (309, 309), 
(309, 308), (309, 310), (308, 307), (307, 308), (305, 304), (306, 304), (306, 303), 
(305, 302), (305, 303), (305, 303), (305, 303), (305, 303), (305, 303), (305, 303), 
(305, 303), (305, 303), (305, 303), (305, 303), (305, 304), (305, 304), (305, 304), 
(305, 304), (305, 304), (305, 304), (305, 305), (306, 306), (306, 306), (306, 306), 
(306, 306), (305, 306), (304, 306), (303, 306), (302, 305), (298, 305), (298, 304), 
(296, 303), (297, 303), (298, 305), (298, 305), (298, 306), (300, 308), (305, 309), 
(306, 309), (306, 309), (306, 309), (306, 309), (306, 308), (306, 307), (306, 306), 
(306, 303), (307, 303), (307, 303), (307, 302), (307, 302), (306, 302), (306, 302), 
(305, 302), (304, 302), (303, 302), (303, 302), (303, 303), (303, 303), (303, 303), 
(303, 303), (303, 304), (303, 304), (303, 305), (303, 305), (303, 305), (303, 305), 
(303, 305), (303, 305), (303, 305), (303, 305), (303, 305), (302, 305), (302, 305), 
(301, 305), (301, 305), (301, 305), (301, 305), (301, 305), (300, 305), (299, 305), 
(299, 305), (299, 305), (298, 305), (297, 305), (298, 306), (300, 306), (301, 308), 
(303, 308), (306, 310), (311, 312), (312, 312), (311, 312), (314, 312), (315, 312), 
(315, 311), (314, 311), (315, 311), (312, 308), (312, 308), (312, 307), (310, 307), 
(309, 307), (306, 307), (305, 307), (304, 307), (305, 307), (304, 307), (305, 307), 
(305, 307), (305, 307), (305, 307), (305, 307), (306, 307), (306, 307), (306, 306), 
(306, 306), (306, 306), (307, 307), (307, 307), (307, 307), (306, 307), (305, 304), 
(305, 304), (305, 306), (306, 306), (306, 306), (307, 303), (307, 294), (308, 291), 
(307, 287), (306, 286), (304, 282), (303, 281), (303, 279), (303, 278), (303, 276), 
(302, 277), (302, 278), (302, 278), (304, 294), (306, 303), (308, 305), (308, 308), 
(309, 308), (309, 311), (311, 314), (313, 314), (314, 312), (313, 311), (311, 310), 
(303, 310), (300, 309), (296, 308), (294, 308), (292, 306), (293, 306), (294, 305), 
(295, 305), (297, 305), (301, 305), (303, 305), (303, 305), (306, 306), (305, 306), 
(305, 305), (306, 305), (307, 305), (307, 304), (307, 303), (307, 302), (308, 301), 
(308, 301), (308, 300), (308, 300), (308, 301), (308, 303), (308, 306), (308, 308), 
(309, 309), (308, 309), (309, 305), (305, 307), (303, 307), (302, 307), (299, 307), 
(298, 307), (298, 307), (298, 306), (297, 306), (298, 306), (298, 305), (299, 305), 
(301, 305), (303, 305), (304, 305), (305, 305), (306, 305), (306, 304), (306, 303), 
(306, 303), (306, 303), (306, 303), (307, 302), (306, 302), (306, 302), (306, 302), 
(305, 302), (305, 305), (305, 305), (305, 306), (304, 306), (303, 306), (303, 306), 
(301, 306), (301, 306), (301, 306), (300, 306), (300, 306), (301, 305), (301, 305), 
(301, 305), (301, 305), (302, 305), (302, 304), (302, 303), (303, 303), (303, 303), 
(303, 302), (303, 302), (304, 303), (304, 303), (305, 305), (306, 306), (306, 306), 
(306, 306), (306, 306), (306, 306), (306, 306), (306, 306), (306, 306), (306, 306), 
(305, 306), (305, 306), (305, 306), (305, 305), (304, 305), (304, 305), (304, 305), 
(304, 305), (304, 305), (304, 305), (304, 305), (304, 305), (304, 305), (304, 305), 
(304, 305), (304, 305), (304, 305), (304, 305), (304, 305), (304, 305), (304, 305), 
(304, 305)
]

# Group 2: Coordinates for Staircase 2
ankle_data_staircase2 = [
        (315, 319), (314, 320), (313, 320), (311, 320), (311, 320), 
(310, 320), (310, 320), (310, 319), (311, 319), (311, 319), (311, 319), (311, 317), 
(311, 315), (310, 315), (310, 315), (310, 315), (311, 314), (311, 315), (311, 315), 
(310, 314), (310, 314), (311, 314), (311, 314), (311, 314), (311, 314), (311, 314), 
(311, 314), (311, 314), (311, 313), (311, 313), (311, 313), (310, 313), (310, 312), 
(310, 312), (310, 312), (311, 312), (311, 312), (311, 312), (312, 312), (312, 312), 
(312, 313), (312, 314), (313, 315), (313, 315), (313, 315), (313, 315), (312, 315), 
(313, 315), (312, 315), (312, 315), (312, 314), (309, 314), (307, 315), (306, 315), 
(306, 315), (306, 315), (305, 315), (305, 314), (306, 314), (308, 314), (309, 314), 
(310, 314), (311, 314), (312, 314), (312, 314), (311, 314), (311, 314), (312, 314), 
(313, 314), (313, 314), (313, 314), (313, 314), (314, 314), (314, 314), (314, 314), 
(314, 315), (314, 316), (315, 316), (316, 316), (316, 316), (316, 316), (316, 315), 
(316, 315), (314, 314), (313, 314), (312, 314), (312, 314), (312, 314), (313, 314), 
(313, 314), (312, 314), (312, 314), (313, 314), (313, 314), (316, 315), (318, 316), 
(320, 318), (321, 320), (323, 322), (323, 321), (323, 321), (323, 322), (323, 322), 
(323, 323), (323, 324), (322, 324), (322, 323), (321, 323), (321, 322), (319, 319), 
(317, 318), (314, 315), (313, 314), (313, 314), (313, 314), (313, 312), (313, 312), 
(313, 312), (313, 313), (313, 313), (313, 313), (313, 314), (313, 314), (313, 315), 
(314, 316), (313, 318), (314, 319), (313, 319), (311, 319), (312, 319), (312, 319), 
(313, 319), (313, 319), (313, 319), (311, 319), (312, 317), (314, 317), (316, 318), 
(318, 318), (321, 318), (323, 320), (323, 318), (324, 318), (322, 319), (322, 320), 
(322, 321), (321, 320), (321, 320), (320, 319), (320, 320), (320, 320), (320, 322), 
(320, 321), (320, 321), (320, 320), (320, 320), (320, 320), (320, 320), (318, 320), 
(318, 321), (318, 322), (317, 322), (317, 322), (317, 323), (317, 324), (316, 324), 
(316, 324), (317, 324), (318, 324), (320, 324), (321, 324), (321, 324), (321, 324), 
(321, 324), (320, 324), (319, 324), (318, 325), (317, 325), (317, 325), (317, 325), 
(322, 325), (322, 325), (323, 326), (324, 326), (323, 326), (323, 326), (323, 326), 
(323, 325), (323, 325), (323, 325), (323, 322), (323, 322), (323, 321), (323, 321), 
(323, 321), (323, 322), (323, 322), (322, 322), (322, 322), (322, 322), (322, 322), 
(323, 323), (323, 323), (323, 323), (318, 323), (316, 322), (318, 323), (319, 323), 
(319, 324), (319, 324), (323, 324), (324, 325), (326, 324), (326, 323), (325, 321), 
(326, 321), (324, 319), (324, 319), (323, 320), (323, 321), (322, 322), (321, 322), 
(319, 323), (318, 323), (312, 321), (309, 319), (309, 319), (308, 319), (307, 318), 
(307, 318), (307, 318), (307, 318), (311, 318), (313, 319), (313, 318), (313, 317), 
(312, 315), (312, 315), (312, 315), (312, 315), (312, 314), (312, 314), (312, 314), 
(312, 313), (312, 313), (312, 313), (312, 313), (312, 313), (313, 313), (313, 313), 
(314, 314), (315, 314), (315, 314), (315, 314), (315, 314), (315, 314), (316, 316), 
(317, 316), (318, 316), (320, 316), (323, 316), (322, 316), (323, 316), (323, 316), 
(323, 317), (322, 317), (322, 317), (322, 318), (322, 319), (316, 320), (315, 320), 
(312, 320), (310, 320), (309, 319), (309, 319), (309, 319), (310, 318), (309, 318), 
(307, 318), (308, 317), (308, 316), (308, 316), (308, 315), (308, 315), (308, 315), 
(309, 315), (309, 314), (309, 314), (311, 313), (311, 312), (311, 312), (312, 312), 
(314, 314), (315, 315), (315, 315), (315, 314), (317, 316), (318, 317), (319, 317), 
(319, 317), (321, 314), (320, 312), (321, 313), (321, 313), (321, 316), (320, 318), 
(322, 319), (319, 320), (315, 321), (314, 320), (314, 321), (314, 320), (315, 320), 
(314, 321), (315, 321), (317, 322), (319, 322), (320, 322), (321, 322), (321, 322), 
(322, 322), (321, 321), (321, 321), (321, 321), (322, 321), (322, 321), (322, 321), 
(322, 321), (322, 320), (322, 319), (321, 318), (321, 318), (321, 318), (320, 317), 
(320, 317), (319, 317), (319, 317), (320, 317), (322, 318), (323, 319), (323, 319), 
(323, 319), (323, 320), (322, 320), (322, 320), (322, 320), (322, 320), (322, 320), 
(324, 321), (324, 322), (325, 322), (325, 321), (325, 321), (322, 322), (321, 322), 
(315, 323), (315, 323), (317, 323), (317, 324), (322, 324), (323, 323), (326, 323), 
(326, 324), (316, 326), (316, 326), (317, 324), (318, 322), (318, 322), (317, 322), 
(318, 321), (316, 320), (316, 320), (317, 320), (315, 318), (313, 318), (315, 318), 
(315, 316), (315, 315), (315, 320), (315, 322), (319, 322), (320, 322), (323, 323), 
(324, 320), (325, 320), (324, 315), (324, 314), (322, 312), (322, 313), (322, 313), 
(322, 314), (323, 317), (321, 319), (318, 320), (318, 320), (318, 321), (318, 321), 
(318, 321), (318, 321), (318, 321), (316, 319), (314, 318), (314, 316), (314, 315), 
(314, 315), (315, 315), (314, 315), (314, 315), (313, 315), (313, 315), (313, 315), 
(313, 316), (313, 316), (313, 316), (312, 316), (312, 316), (312, 316), (313, 316), 
(311, 316), (311, 316), (311, 316), (311, 316)
]

# Group 3: Coordinates for Staircase 3
ankle_data_staircase3 = [
    (325, 324), (327, 326), (328, 327), (328, 328), (329, 328), 
(329, 328), (329, 328), (329, 328), (329, 328), (329, 328), (329, 329), (329, 329), 
(329, 329), (329, 329), (329, 329), (329, 329), (329, 329), (329, 329), (328, 329), 
(328, 329), (328, 329), (328, 329), (328, 329), (328, 329), (328, 329), (328, 329), 
(328, 329), (328, 329), (328, 329), (328, 329), (328, 329), (329, 329), (330, 329), 
(330, 329), (330, 329), (330, 329), (330, 329), (330, 330), (330, 330), (329, 330), 
(329, 330), (330, 330), (330, 330), (329, 329), (329, 329), (328, 329), (328, 329), 
(328, 329), (328, 329), (328, 329), (328, 329), (329, 329), (329, 329), (329, 330), 
(329, 330), (329, 330), (329, 329), (329, 329), (329, 329), (329, 329), (329, 329), 
(329, 330), (330, 330), (330, 330), (330, 331), (330, 331), (330, 331), (330, 331), 
(330, 331), (330, 331), (330, 331), (331, 332), (330, 331), (330, 330), (329, 329), 
(329, 329), (329, 329), (330, 329), (329, 329), (328, 329), (328, 329), (328, 329), 
(328, 329), (328, 328), (327, 328), (327, 328), (327, 327), (327, 327), (327, 327), 
(327, 328), (327, 328), (327, 328), (327, 328), (327, 328), (327, 328), (327, 328), 
(328, 328), (328, 328), (328, 328), (328, 328), (328, 328), (328, 328), (328, 328), 
(328, 328), (327, 328), (327, 328), (326, 328), (325, 328), (326, 328), (327, 328), 
(328, 328), (328, 328), (328, 328), (327, 328), (327, 328), (327, 328), (327, 328), 
(326, 328), (326, 328), (325, 328), (325, 328), (324, 328), (321, 328), (320, 328), 
(323, 328), (324, 328), (325, 328), (326, 328), (326, 328), (326, 327), (326, 326), 
(327, 325), (327, 325), (328, 325), (328, 325), (328, 325), (328, 325), (328, 325), 
(329, 325), (329, 325), (334, 326), (335, 327), (335, 327), (336, 329), (335, 329), 
(335, 328), (334, 328), (334, 329), (334, 329), (334, 329), (334, 331), (334, 331), 
(333, 333), (331, 334), (329, 334), (329, 334), (326, 334), (326, 334), (326, 334), 
(326, 334), (326, 334), (327, 334), (326, 333), (327, 333), (327, 333), (327, 332), 
(327, 332), (328, 332), (329, 332), (329, 330), (329, 330), (329, 329), (329, 329), 
(329, 329), (331, 330), (331, 330), (332, 331), (334, 332), (334, 332), (334, 332), 
(334, 332), (334, 333), (334, 333), (334, 334), (334, 334), (334, 334), (334, 334), 
(334, 334), (333, 334), (334, 334), (334, 333), (333, 333), (334, 335), (334, 335), 
(334, 335), (334, 335), (334, 334), (333, 333), (333, 333), (333, 333), (333, 333), 
(333, 333), (334, 333), (334, 333), (334, 332), (333, 332), (331, 331), (331, 331), 
(329, 330), (328, 330), (327, 330), (327, 330), (327, 330), (324, 330), (324, 330), 
(323, 330), (322, 330), (321, 331), (320, 331), (320, 331), (321, 330), (324, 330), 
(329, 331), (339, 333), (336, 331), (338, 331), (336, 335), (336, 335), (333, 337), 
(333, 338), (330, 336), (330, 338), (331, 338), (331, 336), (333, 336), (333, 331), 
(331, 327), (330, 326), (330, 326), (330, 326), (330, 326), (330, 326), (330, 328), 
(330, 330), (330, 330), (329, 330), (328, 330), (325, 330), (325, 331), (325, 331), 
(328, 331), (328, 331), (328, 330), (328, 328), (328, 328), (328, 329), (327, 330), 
(328, 330), (328, 330), (336, 331), (338, 334), (338, 335), (338, 338), (338, 338), 
(337, 339), (338, 341), (338, 341), (337, 340), (336, 340), (334, 340), (333, 340), 
(332, 340), (333, 335), (332, 331), (332, 331), (332, 332), (332, 332), (332, 333), 
(332, 332), (332, 332), (332, 333), (332, 333), (331, 331), (329, 328), (329, 327), 
(329, 328), (329, 328), (329, 328), (329, 329), (330, 329), (330, 329), (330, 329), 
(330, 330), (331, 330), (331, 330), (332, 330), (333, 330), (332, 330), (328, 329), 
(328, 329), (327, 329), (327, 330), (327, 330), (328, 331), (328, 333), (329, 334), 
(330, 334), (330, 334), (330, 333), (331, 333), (331, 333), (330, 332), (330, 331), 
(330, 331), (330, 331), (331, 331), (331, 330), (332, 332), (332, 332), (331, 332), 
(331, 332), (331, 332), (331, 332), (331, 332), (331, 332), (331, 332), (332, 333), 
(333, 332), (333, 331), (333, 331), (332, 330), (331, 329), (331, 329), (331, 329), 
(327, 329), (323, 329), (337, 329), (336, 329), (335, 328), (334, 328), (334, 328), 
(333, 328), (330, 328), (325, 327), (324, 326), (324, 325), (324, 325), (324, 324), 
(326, 324), (331, 327), (332, 330), (333, 332), (337, 337), (336, 339), (336, 338), 
(336, 336), (336, 336), (335, 341), (336, 343), (336, 342), (336, 340), (336, 339), 
(336, 338), (332, 336), (329, 336), (329, 336), (332, 335), (333, 335), (324, 333), 
(324, 332), (325, 332), (326, 331), (326, 330), (326, 330), (326, 329), (326, 329), 
(327, 329), (327, 329), (327, 328), (327, 328)
]

ankle_data_staircase4 = [
    (328, 329), (332, 329), (332, 329), (340, 334), (343, 346), 
(340, 346), (342, 346), (340, 343), (341, 342), (340, 342), (340, 341), (339, 341), 
(341, 342), (342, 343), (342, 342), (342, 342), (341, 342), (341, 342), (341, 342), 
(341, 342), (341, 342), (341, 342), (339, 342), (338, 342), (336, 342), (336, 342), 
(336, 342), (337, 342), (339, 343), (340, 343), (342, 343), (342, 344), (342, 344), 
(345, 344), (344, 344), (346, 344), (347, 344), (346, 344), (344, 344), (344, 344), 
(345, 344), (346, 344), (346, 344), (346, 344), (346, 345), (346, 344), (346, 346), 
(346, 346), (346, 346), (346, 346), (345, 345), (344, 345), (342, 344), (340, 344), 
(339, 344), (339, 344), (339, 344), (338, 343), (338, 342), (339, 342), (340, 342), 
(340, 342), (341, 342), (341, 341), (342, 341), (342, 341), (344, 341), (345, 341), 
(345, 341), (345, 341), (346, 341), (346, 341), (347, 341), (348, 341), (349, 341), 
(351, 341), (351, 340), (353, 340), (354, 341), (355, 341), (354, 342), (350, 351), 
(350, 349), (350, 349), (346, 348), (343, 348), (339, 348), (337, 348), (338, 347), 
(336, 347), (335, 347), (336, 347), (340, 347), (341, 347), (339, 346), (338, 345), 
(340, 344), (342, 343), (342, 343), (343, 343), (342, 343), (344, 342), (345, 342), 
(347, 342), (348, 342), (350, 342), (353, 344), (352, 342), (352, 341), (352, 341), 
(352, 339), (352, 340), (350, 340), (350, 343), (346, 343), (345, 343), (343, 343), 
(344, 342), (344, 342), (344, 342), (344, 342), (344, 342), (345, 342), (344, 340), 
(344, 339), (344, 338), (342, 338), (342, 339), (341, 338), (340, 338), (340, 338), 
(340, 338), (337, 338), (336, 338), (336, 339), (339, 340), (340, 341), (340, 341), 
(343, 343), (345, 344), (347, 344), (350, 344), (350, 343), (343, 343), (350, 357), 
(349, 348), (349, 348), (349, 348), (348, 348), (348, 348), (348, 348), (348, 348), 
(349, 348), (349, 349), (347, 346), (347, 345), (347, 345), (347, 345), (346, 345), 
(346, 345), (345, 346), (342, 346), (338, 346), (338, 345), (337, 345), (348, 339), 
(351, 337), (354, 338), (353, 339), (353, 340), (342, 344), (343, 345), (344, 347), 
(347, 350), (353, 353), (353, 353), (353, 350), (354, 348), (354, 346), (356, 347), 
(355, 347), (355, 349), (357, 353), (355, 353), (354, 353), (354, 352), (351, 349), 
(350, 349), (347, 347), (346, 346), (345, 345), (345, 345), (344, 344), (343, 344), 
(344, 344), (344, 344), (344, 344), (345, 345), (346, 346), (347, 346), (347, 346), 
(347, 346), (347, 347), (348, 347), (348, 347), (348, 346), (348, 345), (348, 345), 
(348, 346), (348, 346), (348, 346), (348, 346), (347, 345), (347, 345), (348, 349), 
(342, 348), (347, 350), (352, 351), (355, 352), (357, 354), (357, 354), (357, 356), 
(357, 356), (358, 356), (358, 361), (357, 360), (355, 358), (355, 358), (354, 357), 
(354, 359), (354, 357), (351, 348), (351, 347), (350, 348), (350, 348), (350, 347), 
(350, 347), (350, 348), (350, 348), (349, 348), (349, 347), (349, 347), (347, 346), 
(346, 344), (346, 344), (345, 344), (346, 345), (346, 346), (354, 346), (360, 346), 
(360, 346), (359, 346), (353, 346), (352, 346), (350, 346), (350, 348), (350, 348), 
(346, 347), (346, 347), (350, 342), (350, 342), (351, 346), (353, 345), (357, 346), 
(356, 352), (355, 357), (355, 347), (354, 346), (354, 346), (344, 343), (346, 349), 
(346, 350), (347, 350), (347, 350), (347, 350), (348, 350), (349, 351), (349, 351), 
(353, 352), (356, 354), (360, 354), (359, 350), (358, 350), (344, 355), (275, 351), 
(353, 346), (352, 346), (351, 346), (350, 346), (350, 346), (350, 346), (349, 345), 
(343, 344), (340, 343), (342, 344), (342, 344), (340, 343), (341, 343), (341, 343), 
(342, 343), (342, 343), (343, 343), (343, 343), (344, 343), (344, 343), (344, 344), 
(344, 343), (344, 343), (344, 343), (344, 343), (344, 343), (344, 342), (345, 342), 
(345, 342), (346, 343), (347, 343), (349, 343), (349, 343), (349, 344), (350, 344), 
(350, 344), (349, 344), (349, 344), (349, 344), (347, 343), (348, 343), (348, 343), 
(348, 343), (348, 344), (348, 344), (348, 344), (348, 344), (348, 344), (348, 345), 
(348, 345), (348, 345), (349, 347), (349, 347)
]
ankle_data_staircase5 = [
    (372, 365), (366, 363), (364, 363), (359, 360), (60, 57), (370, 365), (370, 365), (370, 365), (371, 369), (372, 371), (372, 371), (372, 371), (372, 370), (372, 370), (372, 370), (371, 369), (369, 368), (368, 367), (364, 362), (364, 359), (364, 359), (365, 359), (366, 358), (369, 358), (370, 359), (371, 366), (372, 368), (372, 368), (372, 368), (371, 368), (370, 367), (370, 365), (371, 364), (370, 364), (370, 364), (365, 360), (364, 360), (361, 361), (357, 360), (357, 360), (357, 360), (356, 360), (356, 360), (357, 361), (357, 361), (357, 362), (357, 362), (358, 362), (358, 362), (358, 361), (358, 361), (359, 361), (360, 362), (364, 365), (366, 367), (371, 372), (371, 372), (376, 374), (376, 375), (375, 375), (379, 374), (378, 372), (375, 371), (375, 369), (369, 367), (367, 367), (363, 367), (363, 367), (361, 367), (362, 367), (362, 367), (361, 368), (362, 368), (362, 368), (361, 366), (361, 366), (362, 366), (362, 366), (361, 366), (360, 366), (359, 365), (358, 364), (357, 363), (356, 362), (355, 362), (354, 361), (353, 361), (353, 361), (355, 361), (355, 361), (366, 361), (366, 361), (362, 362), (362, 363), (362, 363), (363, 359), (368, 360), (376, 362), (379, 364), (377, 369), (375, 369), (374, 368), (377, 367), (388, 372), (372, 376), (374, 376), (362, 354), (361, 354), (360, 354), (360, 355), (361, 359), (361, 360), (362, 362), (363, 364), (364, 366), (364, 367), (366, 368), (366, 370), (370, 370), (372, 370), (376, 371), (377, 375), (379, 382), (378, 385), (380, 388), (382, 386), (381, 388), (381, 386), (381, 377), (380, 374), (380, 369), (379, 369), (378, 370), (378, 370), (378, 369), (378, 367), (377, 362), (376, 361), (376, 361), (373, 362), (372, 359), (372, 360), (371, 360), (371, 360), (372, 361), (372, 361), (372, 361), (372, 362), (369, 363), (368, 363), (368, 365), (367, 366), (366, 366), (368, 369), (369, 363), (371, 372), (372, 374), (372, 374), (375, 376), (378, 378), (379, 379), (379, 378), (381, 383), (384, 381), (384, 381), (383, 380), (383, 380)
]

# List of groups with their corresponding sounds
ankle_groups = [
    {'coordinates': ankle_data_staircase1, 'sound': 'a4.mp3'},  # Replace with your sound file paths
    {'coordinates': ankle_data_staircase2, 'sound': 'b4.mp3'},
    {'coordinates': ankle_data_staircase3, 'sound': 'c4.mp3'},
    {'coordinates': ankle_data_staircase4, 'sound': 'd4.mp3'},
    {'coordinates': ankle_data_staircase5, 'sound': 'e4.mp3'},
]

# Initialize MediaPipe Pose model
mp_pose = mp.solutions.pose
pose = mp_pose.Pose(min_detection_confidence=0.5, min_tracking_confidence=0.5)
mp_drawing = mp.solutions.drawing_utils

# Set up webcam
cap = cv2.VideoCapture(1)

# Main loop to capture frames and process them
while True:
    # Capture frame-by-frame
    ret, frame = cap.read()
    if not ret:
        print("Failed to grab frame.")
        break

    # Convert the frame to RGB for Mediapipe
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    # Process the frame with the Pose model
    results = pose.process(rgb_frame)

    # Check if landmarks were detected
    if results.pose_landmarks:
        # Draw the pose landmarks on the frame (optional, for visualization)
        mp_drawing.draw_landmarks(frame, results.pose_landmarks, mp_pose.POSE_CONNECTIONS)

        # Get the y-coordinates of the left and right ankles (Landmarks 29 and 30 for left and right ankles)
        left_ankle = results.pose_landmarks.landmark[mp_pose.PoseLandmark.LEFT_ANKLE]
        right_ankle = results.pose_landmarks.landmark[mp_pose.PoseLandmark.RIGHT_ANKLE]

        # Convert normalized coordinates to pixel coordinates
        height, width, _ = frame.shape
        left_ankle_y = int(left_ankle.y * height)
        right_ankle_y = int(right_ankle.y * height)

        # Print ankle coordinates (optional)
        print(f"Left ankle y: {left_ankle_y}, Right ankle y: {right_ankle_y}")

        # Check if both ankles' y-values are within the defined area
        if y_min <= left_ankle_y <= y_max and y_min <= right_ankle_y <= y_max:
            # Check each group of ankle coordinates to see if there's a match
            for group in ankle_groups:
                if (left_ankle_y, right_ankle_y) in group['coordinates']:
                    print(f"Ankle coordinates match for {group['sound']}! Playing sound.")
                    play_sound(group['sound'])
                    time.sleep(1)  # Wait 1 second before checking the next values

    # Display the captured frame in a window (optional)
    cv2.imshow("Webcam", frame)

    # Exit loop if 'q' is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the webcam and close OpenCV windows
cap.release()
cv2.destroyAllWindows()
